// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package data

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// NextJobsClient is the client API for NextJobs service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type NextJobsClient interface {
	Next(ctx context.Context, in *NextJobsReq, opts ...grpc.CallOption) (*NextJobsRes, error)
}

type nextJobsClient struct {
	cc grpc.ClientConnInterface
}

func NewNextJobsClient(cc grpc.ClientConnInterface) NextJobsClient {
	return &nextJobsClient{cc}
}

func (c *nextJobsClient) Next(ctx context.Context, in *NextJobsReq, opts ...grpc.CallOption) (*NextJobsRes, error) {
	out := new(NextJobsRes)
	err := c.cc.Invoke(ctx, "/data.NextJobs/Next", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NextJobsServer is the server API for NextJobs service.
// All implementations must embed UnimplementedNextJobsServer
// for forward compatibility
type NextJobsServer interface {
	Next(context.Context, *NextJobsReq) (*NextJobsRes, error)
	mustEmbedUnimplementedNextJobsServer()
}

// UnimplementedNextJobsServer must be embedded to have forward compatible implementations.
type UnimplementedNextJobsServer struct {
}

func (UnimplementedNextJobsServer) Next(context.Context, *NextJobsReq) (*NextJobsRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Next not implemented")
}
func (UnimplementedNextJobsServer) mustEmbedUnimplementedNextJobsServer() {}

// UnsafeNextJobsServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to NextJobsServer will
// result in compilation errors.
type UnsafeNextJobsServer interface {
	mustEmbedUnimplementedNextJobsServer()
}

func RegisterNextJobsServer(s grpc.ServiceRegistrar, srv NextJobsServer) {
	s.RegisterService(&NextJobs_ServiceDesc, srv)
}

func _NextJobs_Next_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NextJobsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NextJobsServer).Next(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/data.NextJobs/Next",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NextJobsServer).Next(ctx, req.(*NextJobsReq))
	}
	return interceptor(ctx, in, info, handler)
}

// NextJobs_ServiceDesc is the grpc.ServiceDesc for NextJobs service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var NextJobs_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "data.NextJobs",
	HandlerType: (*NextJobsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Next",
			Handler:    _NextJobs_Next_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "next.proto",
}
